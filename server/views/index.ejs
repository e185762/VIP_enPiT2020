<!DOCTYPE html>
<html lang="ja">
 <head>
 <link rel="stylesheet" type="text/css" href="style.css">
 <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
 <meta charset="utf-8">
   <title>[DFS]~designed fashion selenes~</title>
 </head>
 <body>

	 <center><h1 class="text">ようこそ！</h1><br>
		 <p class="text">このサイトは自分のデザインから類似した服を見つけることができます</p><br>
	<h2 class="text">まずは自分のイメージする洋服を描いてみよう</center></h2>
	<center>
    <canvas id="canvas" width="640px" height="640px">残念ながらHTML5に対応していません
  </center>
      <div>
      <input id="inputColor" type="color" value="#ff0000">
      <button id="pen-s">細</button>
      <button id="pen-m">中</button>
      <button id="pen-l">太</button>
      <center>
        <button id="eraser">消しゴム</button>
        <button id="clear">全削除</button>
        <button id="buttonSave">保存する</button>
        <button id="fillColor">塗りつぶし</button>
      </center>
      </div>


      
<script type="text/javascript">
//const fs = require('fs');
var canvas = document.getElementById("canvas");
var ctx = canvas.getContext("2d");
ctx.strokeStyle = 'rgb(255,0,0)';//初期描画線の色赤

// Image オブジェクトを生成
var img = new Image();
img.src = "Tshirt.png";

// 画像読み込み終了してから描画
img.onload = function(){
    ctx.drawImage(img, -10, 0, 659, 659);
}


//マウスを操作する
var mouse = {x:0,y:0,x1:0,y1:0,color:"black"};
var draw = false;

var erase = false;

//マウスの座標を取得する
canvas.addEventListener("mousemove",function(e) {
  var rect = e.target.getBoundingClientRect();
  ctx.globalAlpha = 1;

  mouseX = e.clientX - rect.left;
  mouseY = e.clientY - rect.top;

//クリック状態なら描画をする
if(draw === true) {
  if (erase) {
    ctx.globalCompositeOperation = 'destination-out';
    } else {
      ctx.globalCompositeOperation = 'source-over';
    }
    ctx.beginPath();
    ctx.moveTo(mouseX1,mouseY1);
    ctx.lineTo(mouseX,mouseY);
    ctx.lineCap = "round";
    ctx.stroke();
    mouseX1 = mouseX;
    mouseY1 = mouseY;
  }
});

  //クリックしたら描画をOKの状態にする
canvas.addEventListener("mousedown",function(e) {
    ctx.strokeStyle = document.querySelector("#inputColor").value;
    draw = true;
    mouseX1 = mouseX;
    mouseY1 = mouseY;
    undoImage = ctx.getImageData(0, 0,canvas.width,canvas.height);
});

//クリックを離したら、描画を終了する
canvas.addEventListener("mouseup", function(e){
  draw = false;
  ctx.globalCompositeOperation = 'source-over';
  var img2 = new Image();
  img2.src = "Tshirt-shape.png";
  img2.onload = function(){
    ctx.drawImage(img2, -10, 0, 659, 659);
}
});

//ラインの太さ
  $('#pen-s').click(function(e) {
    ctx.lineWidth= 1;
  });
  $('#pen-m').click(function(e) {
    ctx.lineWidth = 5;
  });
  $('#pen-l').click(function(e) {
    ctx.lineWidth = 10;
  });

//消去ボタンを起動する
 $('#clear').click(function(e) {
 		if(!confirm('本当に消去しますか？')) return;
        e.preventDefault();
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.drawImage(img, -10, 0, 659, 659);
  });

//消しゴムボタンを起動する
　$('#eraser').click(function(e) {
  erase = true;
  ctx.globalCompositeOperation = 'destination-out';
  });

//色を選択して変更する
$('#inputColor').click(function(e) {
  erase = false;
  ctx.strokeStyle = document.querySelector("#inputColor").value;
});

//塗りつぶし
$('#fillColor').click(function(e) {
//Tシャツ画像位置
ctx.moveTo(161, 125);
ctx.lineTo(40, 204);
ctx.lineTo(100, 295);
ctx.lineTo(160, 256);
ctx.lineTo(160, 556);
ctx.lineTo(479, 556);
ctx.lineTo(479, 256);
ctx.lineTo(539, 295);
ctx.lineTo(597, 204);
ctx.lineTo(477, 125);
ctx.lineTo(369, 102);
ctx.quadraticCurveTo(319, 127, 270, 102);
//ctx.stroke();
ctx.fillStyle = document.querySelector("#inputColor").value;
ctx.fill();
var img2 = new Image();
  img2.src = "Tshirt-shape.png";
  img2.onload = function(){
    ctx.drawImage(img2, -10, 0, 659, 659);
}
});


// 保存ボタンの処理
$('#buttonSave').click(function(e) {
  const SAVE_URL = 'http://localhost:443/download';
  var canvas = document.getElementById('canvas');
  var base64 = canvas.toDataURL("image/png");
  let link = document.createElement("a");
  link.href = canvas.toDataURL("image/png");
  link.download = "canvas.png";
  link.click();
  // console.log(base64);
  // 送信情報の設定
  if (base64) {
    // サーバへ送信
    sendServer(base64);
    document.getElementById("buttonSave").href = base64;
    location.replace("http://localhost:443/analysis");
  }

});

async function sendServer(param) {
  
  return fetch('./download', {
      method: "POST",
      headers: {
        "Content-Type": "application/json; charset=utf-8"
      },
      body: JSON.stringify({
        data: param
      })
    }).then((response) => response.json());
}


</script>
</body>
</html>

